rule R2_mapping:
    input:
        ref_genome=config["refs"][config["ref_genome"]]["bwa_mem2_index"],
        R2 = rules.multiSplit.output.split_R2
    output:
        R2sortbam = "processed/{sample}/{split}/{sample}.R2.sort.bam"
    threads:  config["resources"]["bwa_cpu_threads"],
    conda:"../envs/main_env.yaml",
    shell:"""

        bwa-mem2 mem -5SP -t {threads} {input.ref_genome} {input.R2} | samtools sort -@{threads} -o {output.R2sortbam} -

    """

rule bam2bed:
    input:
        R2sortbam = rules.R2_mapping.output.R2sortbam,
    output:
        R2_dedup_bed = "processed/{sample}/{split}/{sample}.{split}.R2_5.bed.gz"
    conda:"../envs/main_env.yaml",
    shell:"""

        bedtools bamtobed -i {input.R2sortbam} | gzip > {output.R2_dedup_bed}

    """

rule generate_dedup_fragments:
    input:
        R2_dedup_bed = rules.bam2bed.output.R2_dedup_bed,
    output:
        fragments = "processed/{split}_all/{sample}.{split}.frag.bed.gz",
    #conda:"../envs/main_env.yaml",
    shell:"""
        set +u
        source ~/miniconda3/etc/profile.d/conda.sh
        conda activate R41
        set -u
        
        Rscript ./CHARM/CHARM_scripts/CHARM_dedup.R 20 30 {wildcards.sample} {input.R2_dedup_bed} {output.fragments}
        
        set +u
        conda deactivate
        set -u
        
    """

rule combine_fragments:
    input:
        fragments = expand("processed/{{split}}_all/{sample}.{{split}}.frag.bed.gz", sample=SAMPLES),
    output:
        fragments = "result/fragments/{split}.fragments.bgz",
    conda:"../envs/main_env.yaml",
    threads: 10
    shell:"""
        zcat {input.fragments} | sort -k1,1 -k2,2n | uniq |  bgzip -@ 5 > {output.fragments}
    """